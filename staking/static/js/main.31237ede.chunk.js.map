{"version":3,"sources":["assets/logo.svg","assets/icon.png","components/inc/Helpers.js","components/inc/CreateStake.js","components/inc/RemoveStake.js","components/inc/WithdrawRewards.js","components/Stake.js","components/Migrate.js","components/inc/RemoveRewardTier.js","components/inc/SetBlocksPerReward.js","components/inc/SetMinStake.js","components/inc/SetRewardPercent.js","components/inc/SetStakingContract.js","components/inc/SetRewardTier.js","components/Admin.js","components/Faucet.js","components/inc/Error.js","components/inc/Stat.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","formatNumber","number","Math","round","toString","replace","toTokenValue","formatTokenAmount","blocksToTime","blocks","blocks_rate","formatTime","time","hours","floor","minutes","output","calculateAPY","percent","blocks_per_reward","rewards_year","CreateStake","props","handleChange","event","setState","inputTouched","target","value","inputInvalid","tokenBalance","minStake","handleSubmit","preventDefault","state","amount","createStake","bind","className","onSubmit","this","src","icon","alt","onChange","min","max","placeholder","name","autoComplete","type","required","autoFocus","Component","RemoveStake","stakeOf","removeStake","WithdrawRewards","rewardOf","withdrawReward","disabled","Stake","Migrate","rel","href","SetRewardTier","removeRewardTier","options","rewardTiers","map","tier","key","dir","xmlns","viewBox","d","SetBlocksPerReward","setBlocksPerReward","blocksPerReward","SetMinStake","setMinStake","SetRewardPercent","setRewardPercent","step","rewardPercent","SetStakingAddress","address","setStakingContract","pattern","minLength","stakingContractAddress","handleAmountChange","handlePercentChange","setRewardTier","tiers","percents","Admin","RemoveRewardTier","SetStakingContract","Faucet","faucet","Error","error","role","Stat","stat","color","title","Main","content","stats","status","menu","routes","route","id","currentScreen","onClick","setScreen","adminStats","message","isWaiting","AeronLogo","isAdmin","account","Identicon","App","loading","staking","methods","send","from","on","hash","console","log","then","instance","loadStakingData","screen","token","networkBalance","stakingOwner","tokenOwner","nextRewardOf","blocksTillReward","totalStakeholders","countRewardTiers","tierAmounts","decimals","loadWeb3","loadBlockchainData","listenMMAccount","web3","window","eth","getAccounts","accounts","getBalance","tokenData","Contract","AeronToken","abi","loadTokenData","stakingContract","call","result","AeronStaking","ethereum","Web3","enable","currentProvider","a","balanceOf","owner","totalStakes","exportStakeholders","length","exportTierAmounts","amounts","exportTierPercent","s","adminRoute","faucetRoute","indexOf","push","i","rewardProgress","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.31237ede.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ccc26bac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.45c6ebc9.png\";","export function formatNumber (number) {\n    if(!number) return 0;\n    number = Math.round(number*100)/100\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function toTokenValue(number) {\n    if(!number) return 0;\n    return number/100000000;\n}\n\nexport function formatTokenAmount(number) {\n    return formatNumber(toTokenValue(number)) + ' ARN';\n}\n\nexport function blocksToTime(blocks, blocks_rate = 5) {\n    return formatTime(blocks*blocks_rate);\n}\nfunction formatTime(time) {\n    //var days = Math.floor(time / 3600 / 24);\n    //time -= days * 3600 * 24;\n\n    var hours = Math.floor(time / 3600);\n    time -= hours * 3600;\n    \n    var minutes = Math.floor(time / 60);\n    time -= minutes * 60;\n\n    var output = '';\n    if(hours === 1) {\n        output += '1 hour';\n    }\n    if(hours > 1) {\n        output += hours + ' hours';\n    }\n    if(output === '' && minutes === 1) {\n        output += '1 minute';\n    }\n    if(output === '' && minutes > 1) {\n        output += minutes + ' minutes';\n    }\n    if(output === '')\n    {\n        output = time + ' seconds'\n    }\n    return 'in ' + output;\n     \n }\n\nexport function calculateAPY(percent = 1, blocks_per_reward = 3, blocks_rate = 5) {\n    let rewards_year = 365 * 24 * 60 * 60 / blocks_rate / blocks_per_reward;\n    return formatNumber(percent * rewards_year * 100) + '%';\n}","import React, { Component } from 'react'\nimport { formatNumber } from './Helpers'\nimport icon from '../../assets/icon.png'\n\nclass CreateStake extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        value: '',\n        tokenBalance: 0,\n        inputTouched: false,\n        inputInvalid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n    handleChange = (event) => {\n        this.setState({inputTouched: false})\n        if(event.target.value) this.setState({inputTouched: true})\n        this.setState({inputInvalid: false})\n        if(event.target.value > this.props.tokenBalance || event.target.value < this.props.minStake) {\n            this.setState({inputInvalid: true})\n        }\n        this.setState({value: event.target.value})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        if(this.state.inputTouched && !this.state.inputInvalid) {\n            let amount = Math.round(this.state.value.toString()*100000000)\n            this.props.createStake(amount)    \n            event.preventDefault();\n        }\n    }\n\n  render() {\n    \n    \n\n    return (\n      <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3\">\n        <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n          <h2 className=\"text-3xl uppercase font-bold\">\n              Create Stake\n          </h2>\n\n          <div className=\"mt-6 relative flex w-full flex-wrap items-stretch\">\n              <span className=\"z-10 h-full leading-snug absolute text-center text-gray-400 absolute bg-transparent rounded items-center justify-center w-12 pl-3 mt-1 py-6\">\n                  <div className=\"absolute  left-0 pl-3 flex items-center \">\n                      <img src={icon} alt=\"\" className=\"w-12\"/> \n                      <span className=\"text-3xl hidden font-thin text-gray-800 pl-2\">ARN</span>\n                  </div>\n              </span>\n              <input \n                onChange={this.handleChange}\n                value={this.state.value}\n                min={this.props.minStake}\n                max={this.props.tokenBalance}\n                placeholder=\"0\"\n                name=\"amount\" autoComplete=\"off\" type=\"number\" required autoFocus\n                className={`text-right outline-none text-5xl border-4 text-gray-800 rounded px-4 py-2 w-full \n                ${(this.state.inputTouched && this.state.inputInvalid) ? ' border-red-400' : ' border-transparent' }`} />\n          </div>\n          <div className=\"text-sm flex flex-wrap justify-between align-right mt-2 text-right\">\n              <div>\n                <span className=\"pr-2\">\n                    Min: \n                </span>\n                <span className=\"font-semibold pr-2\">\n                    {formatNumber(this.props.minStake)} ARN\n                </span>\n              </div>\n              <div>\n                <span className=\"pr-2\">\n                    Available: \n                </span>\n                <span className=\"font-semibold\">\n                    {formatNumber(this.props.tokenBalance)} ARN\n                </span>\n              </div>\n          </div>\n\n          <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-yellow-500  rounded-lg bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">Stake</button>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreateStake;\n","import React, { Component } from 'react'\nimport icon from '../../assets/icon.png'\nimport { formatNumber } from './Helpers'\n\nclass RemoveStake extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            inputTouched: false,\n            inputInvalid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange = (event) => {\n        this.setState({inputTouched: false})\n\n        if(event.target.value) this.setState({inputTouched: true})\n        \n        this.setState({inputInvalid: false})\n        \n        if(event.target.value > this.props.stakeOf || event.target.value < 1)\n        {\n            this.setState({inputInvalid: true})\n        }\n        this.setState({value: event.target.value})\n      }\n    \n      handleSubmit = (event) => {\n        event.preventDefault()\n        if(this.state.inputTouched && !this.state.inputInvalid) {\n            let amount = Math.round(this.state.value.toString()*100000000)\n            this.props.removeStake(amount)    \n        }\n      }\n      \n  render() {\n    return (\n      <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3\">\n      <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n        <h2 className=\"text-3xl uppercase font-bold\">\n            Remove Stake\n        </h2>\n\n        <div className=\"mt-6 relative flex w-full flex-wrap items-stretch\">\n            <span className=\"z-10 h-full leading-snug absolute text-center text-gray-400 absolute bg-transparent rounded items-center justify-center w-12 pl-3 mt-1 py-6\">\n                <div className=\"absolute  left-0 pl-3 flex items-center \">\n                    <img src={icon} alt=\"\" className=\"w-12\"/> \n                    <span className=\"text-3xl hidden font-thin text-gray-800 pl-2\">ARN</span>\n                </div>\n            </span>\n            <input \n                onChange={this.handleChange}\n                value={this.state.value}\n                min=\"1\"\n                max={this.props.stakeOf}\n                placeholder=\"0\"\n                name=\"amount\" autoComplete=\"off\" type=\"number\" required\n                className={`text-right outline-none text-5xl border-4 text-gray-800 rounded px-4 py-2 w-full \n                ${(this.state.inputTouched && this.state.inputInvalid) ? ' border-red-400' : ' border-transparent' }`} />\n        </div>\n        <div className=\"text-sm align-right mt-2 text-right\">\n            <span className=\"pr-2\">\n                Available: \n            </span>\n            <span className=\"font-semibold\">\n                {formatNumber(this.props.stakeOf)} ARN\n            </span>\n        </div>\n\n        <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-red-600  rounded-lg bg-red-700 font-bold p-4 uppercase border-red-800 border\">\n            Remove\n        </button>\n\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default RemoveStake;\n","import React, { Component } from 'react'\nimport icon from '../../assets/icon.png'\nimport { formatNumber } from './Helpers'\n\nclass WithdrawRewards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    if(this.props.rewardOf > 0) this.props.withdrawReward()\n  }\n\n  render() {\n    return (\n      <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3\">\n      <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n\n        <h2 className=\"text-3xl uppercase font-bold\">\n          Withdraw <span className=\"inline md:hidden lg:inline\">Rewards</span>\n        </h2>\n        <div className=\"mt-6 relative flex w-full flex-wrap items-stretch\">\n            <span className=\"z-10 h-full leading-snug absolute text-center text-gray-400 absolute bg-transparent rounded items-center justify-center w-12 pl-3 mt-1 py-6\">\n                <div className=\"absolute  left-0 pl-3 flex items-center \">\n                    <img src={icon} alt=\"\" className=\"w-12\"/> \n                    <span className=\"text-3xl hidden font-thin text-gray-800 pl-2\">ARN</span>\n                </div>\n            </span>\n            <input onChange={this.handleChange}  \n            value={this.props.rewardOf}\n            disabled autoComplete=\"off\" type=\"number\" \n            className=\"pl-10 bg-gray-400 text-right border-4 border-gray-400 text-5xl text-gray-600 rounded px-4 py-2 w-full\" />\n        </div>\n\n\n        <div className=\"text-sm align-right mt-2 text-right\">\n            <span className=\"pr-2\">\n                Available: \n            </span>\n            <span className=\"font-semibold\">\n                {formatNumber(this.props.rewardOf)} ARN\n            </span>\n        </div>\n\n        <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-yellow-500  rounded-lg bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n            Withdraw\n        </button>\n\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default WithdrawRewards;\n","import React, { Component } from 'react'\nimport CreateStake from './inc/CreateStake'\nimport RemoveStake from './inc/RemoveStake'\nimport WithdrawRewards from './inc/WithdrawRewards'\n\nclass Stake extends Component {\n  \n  render() {\n    \n    return (\n      <div className=\"flex flex-wrap mx-5 my-5\">\n          \n        <CreateStake\n            tokenBalance={this.props.tokenBalance}\n            createStake={this.props.createStake}\n            minStake={this.props.minStake}\n        />\n\n        <WithdrawRewards\n            rewardOf={this.props.rewardOf}\n            withdrawReward={this.props.withdrawReward}\n        />\n\n        <RemoveStake\n            stakeOf={this.props.stakeOf}\n            removeStake={this.props.removeStake}\n        />\n\n      </div>\n    )\n  }\n}\n\nexport default Stake;\n","import React, { Component } from 'react'\n\nclass Migrate extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      output: '0'\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"bg-aero-800 h-screen p-5 text-center\"> \n      <div className=\"w-full md:w-1/2 py-3 px-3 mx-auto p-12 rounded bg-aero-700\">\n    \n        <h1 className=\"text-6xl font-bold mb-5\">Migration</h1>\n        \n        <h3 className=\"text-xl font-bold mb-5\">\n          Migration guide to be released soon.\n        </h3>\n\n        <h3 className=\"text-xl font-bold mb-5\">\n          <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" \n          className=\"ml-2 underline hover:text-yellow-100\" href=\"https://www.binance.org/en/smartChain\">\n            Learn more about Binance Smart Chain\n          </a>\n          </h3>\n\n          <h3 className=\"text-xl font-bold mb-5\">\n          <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" className=\"ml-2 underline hover:text-yellow-100\" \n          href=\"https://github.com/binance-chain/docs-site/blob/add-bsc/docs/smart-chain/wallet/metamask.md\">\n            Use Metamask For Binance Smart Chain\n          </a>\n          </h3>\n\n          \n        \n        \n        \n        \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Migrate;\n","import React, { Component } from 'react'\nimport { formatNumber } from './Helpers'\n\nclass SetRewardTier extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange = (event) => {\n        this.setState({value: event.target.value})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        if(this.state.value){\n            let amount = Math.round(this.state.value.toString()*100000000)\n            this.props.removeRewardTier(amount)\n        }\n    }\n    render() {\n\n        let options = this.props.rewardTiers.map(tier => {\n            return (\n                <option key={tier.amount} className=\"text-right\" value={tier.amount}>\n                ({ formatNumber(tier.percent) }%) { formatNumber(tier.amount) }\n                </option>\n            )\n        })\n\n        return (\n        <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3 flex justify-between\">\n            <form className=\"p-12 w-full rounded bg-aero-700 flex flex-col justify-between\" onSubmit={this.handleSubmit}>\n                \n                <h2 className=\"text-3xl uppercase  font-bold\">\n                    Remove Tier\n                </h2>\n                <div className=\"mt-4 w-full relative\">\n                <div className=\"relative\">\n                     <select onChange={this.handleChange}\n                        value={this.state.value}\n                        className=\"border-4 border-transparent block text-5xl appearance-none w-full bg-gray-200  text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                        required dir=\"rtl\">\n                        <option className=\"text-right\"></option>\n                        { options }\n                        </select>\n                        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                        <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n                        </div>\n                    </div>\n\n                \n       \n                    <div className=\"text-sm align-right mt-2 text-right\">\n                        <span className=\"pr-2\">\n                        Select tiers amount to remove\n                        </span>\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-yellow-500  rounded-lg bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n                    Remove\n                </button>\n\n            </form>\n        </div>\n        );\n    }\n}\n\nexport default SetRewardTier;\n","import React, { Component } from 'react'\nimport { formatNumber } from './Helpers'\n\nclass SetBlocksPerReward extends Component {\n    //\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            inputTouched: false,\n            inputInvalid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n        handleChange = (event) => {\n            this.setState({inputTouched: false})\n            if(event.target.value) this.setState({inputTouched: true})\n\n            this.setState({inputInvalid: false})\n            if(event.target.value <= 0) {\n                this.setState({inputInvalid: true})\n            }\n            this.setState({value: event.target.value})\n        }\n    \n        handleSubmit = (event) => {\n            event.preventDefault()\n            if(this.state.inputTouched && !this.state.inputInvalid) {\n                let amount = Math.round(this.state.value.toString())\n                this.props.setBlocksPerReward(amount)    \n                event.preventDefault();\n            }\n        }\n    \n      render() {\n        \n        \n    \n        return (\n          <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3\">\n            <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n\n        <h2 className=\"text-3xl uppercase font-bold\">\n          Reward Time\n        </h2>\n\n        <div className=\"mt-6 relative flex w-full flex-wrap items-stretch\">\n        <input \n                onChange={this.handleChange}\n                value={this.state.value}\n                min=\"0\"\n                placeholder=\"0\"\n                name=\"amount\" autoComplete=\"off\" type=\"number\" required \n                className={`text-right outline-none text-5xl border-4 text-gray-800 rounded px-4 py-2 w-full \n                ${(this.state.inputTouched && this.state.inputInvalid) ? ' border-red-400' : ' border-transparent' }`} />\n        </div>\n        <div className=\"text-sm align-right mt-2 text-right\">\n            <span className=\"pr-2\">\n                Current: \n            </span>\n            <span className=\"font-semibold\">\n                {formatNumber(this.props.blocksPerReward)} blocks\n            </span>\n        </div>\n\n        <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-yellow-500  rounded-lg bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n            Set\n        </button>\n\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default SetBlocksPerReward;\n","import React, { Component } from 'react'\n\nclass SetMinStake extends Component {\n    //\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            inputTouched: false,\n            inputInvalid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n        handleChange = (event) => {\n            this.setState({inputTouched: false})\n            if(event.target.value) this.setState({inputTouched: true})\n\n            this.setState({inputInvalid: false})\n            if(event.target.value <= 0) {\n                this.setState({inputInvalid: true})\n            }\n            this.setState({value: event.target.value})\n        }\n    \n        handleSubmit = (event) => {\n            event.preventDefault()\n            if(this.state.inputTouched && !this.state.inputInvalid) {\n                let amount = Math.round(this.state.value.toString()*100000000)\n                this.props.setMinStake(amount)    \n                event.preventDefault();\n            }\n        }\n    \n      render() {\n        \n        \n    \n        return (\n          <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3\">\n            <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n\n        <h2 className=\"text-3xl uppercase font-bold\">\n          Minimum Stake\n        </h2>\n\n        <div className=\"mt-6 relative flex w-full flex-wrap items-stretch\">\n        <input \n                onChange={this.handleChange}\n                value={this.state.value}\n                min=\"0\"\n                placeholder=\"0\"\n                name=\"amount\" autoComplete=\"off\" type=\"number\" required \n                className={`text-right outline-none text-5xl border-4 text-gray-800 rounded px-4 py-2 w-full \n                ${(this.state.inputTouched && this.state.inputInvalid) ? ' border-red-400' : ' border-transparent' }`} />\n        </div>\n        <div className=\"text-sm align-right mt-2 text-right\">\n            <span className=\"pr-2\">\n                Current: \n            </span>\n            <span className=\"font-semibold\">\n                {this.props.minStake} ARN\n            </span>\n        </div>\n\n        <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-yellow-500  rounded-lg bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n            Set\n        </button>\n\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default SetMinStake;\n","import React, { Component } from 'react'\n\nclass SetRewardPercent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            inputTouched: false,\n            inputInvalid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n        handleChange = (event) => {\n            this.setState({inputTouched: false})\n            if(event.target.value) this.setState({inputTouched: true})\n\n            this.setState({inputInvalid: false})\n            if(event.target.value <= 0) {\n                this.setState({inputInvalid: true})\n            }\n            this.setState({value: event.target.value})\n        }\n    \n        handleSubmit = (event) => {\n            event.preventDefault()\n            if(this.state.inputTouched && !this.state.inputInvalid) {\n                let amount = Math.round(this.state.value.toString()*100000/100)\n                this.props.setRewardPercent(amount)    \n                event.preventDefault();\n            }\n        }\n    \n      render() {\n        \n        \n    \n        return (\n          <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3\">\n            <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n\n        <h2 className=\"text-3xl uppercase font-bold\">\n          Default Reward\n        </h2>\n\n        <div className=\"mt-6 relative flex w-full flex-wrap items-stretch\">\n        <input \n                onChange={this.handleChange}\n                value={this.state.value}\n                min=\"0\"\n                step=\"0.001\"\n                placeholder=\"0\"\n                name=\"amount\" autoComplete=\"off\" type=\"number\" required \n                className={`text-right outline-none text-5xl border-4 text-gray-800 rounded px-4 py-2 w-full \n                ${(this.state.inputTouched && this.state.inputInvalid) ? ' border-red-400' : ' border-transparent' }`} />\n        </div>\n        <div className=\"text-sm align-right mt-2 text-right\">\n            <span className=\"pr-2\">\n                Current: \n            </span>\n            <span className=\"font-semibold\">\n                {this.props.rewardPercent}%\n            </span>\n        </div>\n\n        <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-yellow-500  rounded-lg bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n            Set\n        </button>\n\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default SetRewardPercent;\n","import React, { Component } from 'react'\n\nclass SetStakingAddress extends Component {\n    //\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n        handleChange = (event) => {\n          this.setState({value: event.target.value})\n        }\n    \n        handleSubmit = (event) => {\n            event.preventDefault()\n            let address = this.state.value\n            this.props.setStakingContract(address)    \n        \n        }\n    \n      render() {\n        \n        \n    \n        return (\n          <div className=\"w-full md:w-1/2 xl:w-1/3 py-3 px-3\">\n            <form className=\"p-12 rounded bg-red-900\" onSubmit={this.handleSubmit}>\n\n        <h2 className=\"text-3xl uppercase font-bold\">\n          Staking Contract\n        </h2>\n\n        <div className=\"mt-6 relative flex w-full flex-wrap items-stretch\">\n        <input \n          onChange={this.handleChange}\n          value={this.state.value}\n          placeholder=\"\"\n          autoComplete=\"off\" type=\"text\" required pattern=\"^(0x){1}[0-9a-fA-F]{40}$\" minLength=\"42\"\n          className=\"text-right outline-none text-5xl border-4 text-gray-800 rounded px-4 py-2 w-full border-transparent\"\n        />\n        </div>\n        <div className=\"text-sm align-right mt-2 text-right\">\n            <span className=\"pr-2\">\n                Current: \n            </span>\n            <span className=\"font-semibold text-xs\">\n                {this.props.stakingContractAddress}\n            </span>\n        </div>\n\n        <button type=\"submit\" className=\"mt-6 w-full px-8 text-3xl text-black hover:bg-yellow-500 rounded-lg bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n            Set\n        </button>\n\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default SetStakingAddress;\n","import React, { Component } from 'react'\nimport { formatNumber } from './Helpers'\n\nclass SetRewardTier extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: '',\n            percent: '',\n        };\n        this.handleAmountChange = this.handleAmountChange.bind(this);\n        this.handlePercentChange = this.handlePercentChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleAmountChange = (event) => {\n        this.setState({amount: event.target.value})\n    }\n\n    handlePercentChange = (event) => {\n        this.setState({percent: event.target.value})\n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault()\n        \n        let amount = Math.round(this.state.amount.toString()*100000000)\n        let percent = Math.round(this.state.percent.toString()*100000/100)\n        this.props.setRewardTier(amount, percent)    \n        event.preventDefault();\n    }\n\n    render() {\n    \n    let tiers = this.props.rewardTiers.map( tier => {\n        return (\n            <div key={tier.amount} className=\"text-sm align-right mt-2 text-right\">\n                <span className=\"font-semibold\">\n                > {formatNumber(tier.amount)} ARN \n                </span>\n            </div>\n        )\n    })\n\n    let percents = this.props.rewardTiers.map( tier => {\n        return (\n            <div  key={tier.percent} className=\"text-sm align-left mt-2 text-left\">\n                <span className=\"font-semibold\">\n                    = {formatNumber(tier.percent)}%\n                </span>\n            </div> \n        )\n    })\n\n    return (\n        <div className=\"w-full md:w-full xl:w-2/3 py-3 px-3\">\n        <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n\n    <h2 className=\"text-3xl uppercase font-bold\">\n        Reward Tiers\n    </h2>\n\n    <div className=\"mt-4 relative flex w-full flex-wrap\">\n        <div className=\"w-1/2  pr-4\">\n            <div className=\"text-sm align-left mb-2 text-left\">\n                <span className=\"\">\n                    Tier amount, ARN \n                </span>\n            </div>\n            <input \n                onChange={this.handleAmountChange}\n                value={this.state.amount}\n                min=\"0\"\n                placeholder=\"0\"\n                name=\"amount\" autoComplete=\"off\" type=\"number\" required \n                className=\"border-transparent text-right outline-none text-5xl border-4 text-gray-800 rounded-lg px-4 py-2 w-full\"\n                 />\n            \n            {tiers}\n        </div>\n        <div className=\"w-1/2 pl-4\">\n        <div className=\"text-sm align-left mb-2 text-left\">\n                <span className=\"\">\n                    Reward percent \n                </span>\n                </div>\n        <input \n            onChange={this.handlePercentChange}\n            value={this.state.percent}\n            min=\"0\"\n            step=\"0.001\"\n            placeholder=\"0\"\n            name=\"amount\" autoComplete=\"off\" type=\"number\" required \n            className=\"border-transparent text-right outline-none text-5xl border-4 text-gray-800 rounded-lg px-4 py-2 w-full\"\n             />\n                \n            {percents}\n        </div>\n    </div>\n    \n\n    <button type=\"submit\" className=\"mt-8 w-full px-6 text-3xl text-black hover:bg-yellow-500  rounded bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n        Set\n    </button>\n\n    </form>\n    </div>\n);\n}\n}\n\nexport default SetRewardTier;\n","import React, { Component } from 'react'\nimport RemoveRewardTier from './inc/RemoveRewardTier'\nimport SetBlocksPerReward from './inc/SetBlocksPerReward'\nimport SetMinStake from './inc/SetMinStake'\nimport SetRewardPercent from './inc/SetRewardPercent'\nimport SetStakingContract from './inc/SetStakingContract'\nimport SetRewardTier from './inc/SetRewardTier'\n\nclass Admin extends Component {\n\n  render() {\n    \n    return (\n      <div className=\"flex flex-wrap mx-5 my-5\">\n          \n        <SetMinStake\n          minStake={this.props.minStake}\n          setMinStake={this.props.setMinStake}\n        />\n\n        <SetBlocksPerReward\n          blocksPerReward={this.props.blocksPerReward}\n          setBlocksPerReward={this.props.setBlocksPerReward}\n        />\n\n       <SetRewardPercent\n          rewardPercent={this.props.rewardPercent}\n          setRewardPercent={this.props.setRewardPercent}\n        />\n\n        <SetRewardTier\n          setRewardTier={this.props.setRewardTier}\n          rewardTiers={this.props.rewardTiers}\n        />\n\n        <RemoveRewardTier\n          rewardTiers={this.props.rewardTiers}\n          removeRewardTier={this.props.removeRewardTier}\n        />\n\n        <SetStakingContract\n          stakingContractAddress={this.props.stakingContractAddress}\n          setStakingContract={this.props.setStakingContract}\n        />\n\n      </div>\n    )\n  }\n}\n\nexport default Admin;\n","import React, { Component } from 'react'\n\nclass Faucet extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n}\n  handleSubmit(event) {\n    event.preventDefault()\n    this.props.faucet()\n  }\n\n  render() {\n    return (\n      <div className=\"bg-aero-800 h-screen p-5 text-center\"> \n      <div className=\"w-full md:w-1/2 py-3 px-3 mx-auto\">\n      <form className=\"p-12 rounded bg-aero-700\" onSubmit={this.handleSubmit}>\n        <h1 className=\"text-6xl font-bold mb-5\">Testnet ARN Faucet</h1>\n        <h3 className=\"text-xl font-bold mb-5\"> First you will need to get testnet BNB tokens:\n\n        <a rel=\"noopener noreferrer nofollow\" target=\"_blank\"\n        className=\"ml-2 underline hover:text-yellow-100\" \n         href=\"https://testnet.binance.org/faucet-smart\">\n        BNB testnet faucet\n        </a>.<br/><br/> To claim ARN test tokens click below:\n        </h3>\n        <button type=\"submit\" className=\"mt-8 w-1/2 px-6 text-3xl text-black hover:bg-yellow-500  rounded bg-yellow-600 font-bold p-4 uppercase border-yellow-700 border\">\n          Claim Now!\n        </button>\n        </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Faucet;\n","import React, { Component } from 'react'\n\nclass Error extends Component {\n\n  render() {\n    if(this.props.error === 'noMetaMask')\n    {\n      this.props.error = <span>\n        You need to install Metamask and connect to Binance Smart Chain.\n        <a className=\"ml-2 hover:text-yellow-100 underline font-semibold\" href=\"https://github.com/binance-chain/docs-site/blob/add-bsc/docs/smart-chain/wallet/metamask.md\">\n          View guide.\n      </a></span>;\n    }\n    return (\n        <div className=\"flex flex-wrap mx-6 my-5\">\n            <div className=\"bg-red-900 border-l-4 w-full border-red-400 p-5\" role=\"alert\">\n                <p className=\"font-bold\">Error</p>\n                <p className=\"break-all\">{this.props.error}</p>\n            </div>\n        </div> \n  )\n  }\n}\n\nexport default Error;\n","import React, { Component } from 'react'\n\nclass Stat extends Component {\n\n  render() {\n    let stat = this.props.stat;\n    return (\n      <div className=\"w-1/2 md:w-1/3 lg:w-1/6 py-3 px-3\">\n          <div className={` ${ stat.color }  rounded p-4 `}>\n              <div className=\"flex flex-row items-center\">\n                  <div className=\"flex-1 text-right\">\n                      <h5 className=\"text-blue-200 uppercase text-sm font-thin\">{ stat.title }</h5>\n                      <h3 className=\"text-xl\">{ stat.value }</h3>\n                  </div>\n              </div>\n          </div>\n      </div>\n  )\n  }\n}\n\nexport default Stat;\n","import React, { Component } from 'react'\nimport Stake from './Stake'\nimport Migrate from './Migrate'\nimport Admin from './Admin'\nimport Faucet from './Faucet'\nimport Error from './inc/Error'\nimport Stat from './inc/Stat'\nimport Identicon from 'identicon.js';\nimport AeronLogo from '../assets/logo.svg'\n\nclass Main extends Component {\n\n  render() {\n    let content, stats, error, status\n\n    let menu = this.props.routes.map(route => {\n      return (\n      <li key={route.id}\n        className={`cursor-pointer uppercase block mx-6 py-4 px-0 hover:text-white hover:border-white border-b-4 \n        ${this.props.currentScreen === route.id ? 'border-white text-white' : 'text-blue-100 border-transparent'}`}\n        onClick={(event) => {\n          this.props.setScreen(route.id)\n        }}\n        >\n       {route.title}\n     </li>\n     )\n    })\n \n\n    if(this.props.currentScreen === 'admin') {\n        stats = this.props.adminStats.map(stat => {\n            return (\n                <Stat key={stat.id} stat={stat}/>\n            )\n        })\n      content = <Admin\n        setMinStake={this.props.setMinStake}\n        minStake={this.props.minStake}\n        blocksPerReward={this.props.blocksPerReward}\n        setBlocksPerReward={this.props.setBlocksPerReward}\n        rewardPercent={this.props.rewardPercent}\n        setRewardPercent={this.props.setRewardPercent}\n        stakingContractAddress={this.props.stakingContractAddress}\n        rewardTiers={this.props.rewardTiers}\n        setRewardTier={this.props.setRewardTier}\n        removeRewardTier={this.props.removeRewardTier}\n        setStakingContract={this.props.setStakingContract}\n        \n      />\n    }  else if(this.props.currentScreen === 'stake') {\n        stats = this.props.stats.map(stat => {\n            return (\n                <Stat key={stat.id} stat={stat}/>\n            )\n        })\n      content = <Stake\n        createStake={this.props.createStake}\n        removeStake={this.props.removeStake}\n        withdrawReward={this.props.withdrawReward}\n        tokenBalance={this.props.tokenBalance}\n        stakeOf={this.props.stakeOf}\n        rewardOf={this.props.rewardOf}\n        minStake={this.props.minStake}\n      /> \n    }  else if(this.props.currentScreen === 'migrate') {\n      content = <Migrate/>\n    }\n    else if(this.props.currentScreen === 'faucet') {\n        content = <Faucet\n        faucet={this.props.faucet}\n        />\n    }\n\n    if(this.props.error.message) {\n        error = <Error error={this.props.error.message}/> \n    }\n\n    if(this.props.isWaiting) {\n        status = <div className=\"flex flex-wrap mx-6 my-5\">\n        <div className=\"bg-green-700 border-l-4 w-full border-green-100 p-5\" role=\"alert\">\n            <p className=\"font-bold\">Status</p>\n            <p className=\"break-all\" id=\"loader\">Waiting for transaction to complete...</p>\n        </div>\n        </div> \n    }\n\n    return (\n    <div>\n        <div className=\"bg-aero-900 p-5\">  \n            <nav className=\"flex items-center justify-between flex-wrap mb-6\">\n                <div className=\"flex items-center flex-shrink-0 text-white mx-auto sm:mx-4 mb-4 sm:mb-0\">\n                    <img className=\"fill-current w-40\" alt=\"\" src={ AeronLogo }/>\n                </div>\n                <div className=\"block mx-auto flex items-center w-auto mb-4 sm:mb-0\">\n                    <ul className=\"text-xl align-items-center flex flex-grow-1 flex-wrap justify-items-center\">\n                    { menu }\n                    </ul>\n                </div>\n                <div className=\"flex flex-shrink-0 mx-auto lg:mx-4\">\n                    <div className=\"text-sm px-4 py-2 leading-none border rounded hover:text-white hover:border-white text-blue-100 border-blue-100\">\n                        <span className=\"text-xs\">Connected account: \n                        <span className=\"pl-2 font-bold text-red-600\">{ this.props.isAdmin }</span>\n                        </span><br/>\n                        <span className=\"text-xs truncate block sm:inline\">{this.props.account}</span>\n                        { this.props.account\n                        ? <img className=\"w-6 w-6 inline ml-2\" alt=\"\"\n                            src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n                        />\n                        : <span></span>\n                        }\n                    </div>\n                </div>\n            </nav>\n            <div className=\"flex flex-wrap mt-3\">\n                { stats }\n            </div>\n        </div>\n\n        { status }\n        { error }\n        \n        { content }        \n        \n    </div>\n\n    )\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport AeronToken from '../contracts/AeronToken.json'\nimport AeronStaking from '../contracts/AeronStaking.json'\nimport Main from './Main'\nimport { formatNumber, toTokenValue, formatTokenAmount, calculateAPY, blocksToTime } from './inc/Helpers'\n\nclass App extends Component {\n\n  async UNSAFE_componentWillMount() {\n    this.setState({ error: {} })\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    await this.listenMMAccount()\n  }\n\n  async loadBlockchainData() {\n  \n    const web3 = window.web3\n\n    if(!web3) {\n        let error = {message: 'noMetaMask'}\n        this.setState({ error })\n        this.setState({ loading: false })\n        return;\n    }\n\n    const accounts = await web3.eth.getAccounts()\n    \n    this.setState({ account: accounts[0] })\n\n    const networkBalance = await web3.eth.getBalance(this.state.account)\n    this.setState({ networkBalance })\n\n    //const networkId =  await web3.eth.net.getId()\n    //AeronToken.networks[networkId]\n    const tokenData = {address:'0x81Dbb3b9397D7C912c7211A96134345Cb2123223'}\n    const token = new web3.eth.Contract(AeronToken.abi, tokenData.address)\n    this.setState({ token })\n    \n    if(!token){\n        let error = {message: 'NoMetaMask'}\n        console.log('Token contract is not deployed to this network.')\n        this.setState({ error })\n    }\n    if(token && this.state.account) { \n        await this.loadTokenData()\n        this.state.token.methods.stakingContract().call((error, result) => {\n            if(!error) {\n                this.setState({ stakingContractAddress: result })\n            }\n        }).then((instance) => {\n            if(this.state.stakingContractAddress) {\n                const staking = new web3.eth.Contract(AeronStaking.abi, this.state.stakingContractAddress)\n                this.setState({ staking })\n                this.loadStakingData()\n            } else {\n                let error = {message:'Staking contract is not deployed to this network.'}\n                console.log(error)\n                this.setState({ error })\n            }\n        })\n    } else {\n        let error = {message:'Staking contract is not deployed to this network (0).'}\n        console.log(error)\n        this.setState({ error })\n    }\n\n    this.setState({ loading: false })\n  }\n\n  async loadWeb3() {\n    \n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n      //autoRefreshOnNetworkChange=false\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n        let error = {message: 'noMetaMask'}\n        console.log(error)\n        this.setState({ error })\n    }\n  }\n\n  async listenMMAccount() {\n    if(!window.ethereum) {\n        let error = {message: 'noMetaMask'}\n        console.log(error)\n        this.setState({ error })\n        return;\n    }\n    window.ethereum.on(\"accountsChanged\", async () => {\n        this.setState({ error: '' })\n        await this.loadBlockchainData()\n        await this.loadStakingData()\n    })\n    //window.ethereum.on(\"networkChanged\", async () => {\n     //   await this.loadBlockchainData()\n       // await this.loadStakingData()\n    //})\n}\n\n  async loadTokenData() {\n\n    this.state.token.methods.balanceOf(this.state.account).call((error, result) => {\n        if(!error) {\n            this.setState({ tokenBalance: result })\n        }\n    })\n\n    this.state.token.methods.owner().call((error, result) => {\n        if(!error) {\n            this.setState({ tokenOwner: result })\n        }\n    })\n\n    \n\n  }\n\n  async loadStakingData() {\n    \n    this.setState({isWaiting: false})\n    this.loadTokenData()\n    \n    this.state.staking.methods.owner().call((error, result) => {\n        if(!error) {\n            this.setState({ stakingOwner: result })\n        }\n    })\n    \n    this.state.staking.methods.stakeOf(this.state.account).call((error, result) => {\n        if(!error) {\n            this.setState({ stakeOf: result })   \n        }\n    })\n\n    this.state.staking.methods.rewardOf(this.state.account).call((error, result) => {\n        if(!error) {\n            this.setState({ rewardOf: result })   \n        }\n    })\n    \n\n    this.state.staking.methods.nextRewardOf(this.state.account).call((error, result) => {\n        if(!error) {\n            this.setState({ nextRewardOf: result })   \n        }\n    })\n\n    this.state.staking.methods.blocksTillReward(this.state.account).call((error, result) => {\n        if(!error) {\n            this.setState({ blocksTillReward: result })   \n        }\n    })\n    \n    this.state.staking.methods.minStake().call((error, result) => {\n        if(!error) {\n            this.setState({ minStake: result })  \n        }\n    })\n\n    this.state.staking.methods.totalStakes().call((error, result) => {\n        if(!error) {\n            this.setState({ totalStakes: result })   \n        }\n    })\n\n    this.state.staking.methods.exportStakeholders().call((error, result) => {\n        if(!error && result) {\n            this.setState({ totalStakeholders: result.length })   \n        }\n    })\n\n    this.state.staking.methods.blocksPerReward().call((error, result) => {\n        if(!error) {\n            this.setState({ blocksPerReward: result })   \n        }\n    })\n\n    this.state.staking.methods.exportTierAmounts().call((error, amounts) => {\n        if(!error) {\n            this.setState({ tierAmounts: amounts })\n            this.state.staking.methods.exportTierPercent().call((error, percents) => {\n                if(!error && amounts) {\n                    let result = []\n                    let s;\n                    for (s = 0; s < amounts.length; s += 1){\n                        result[s] = {\n                            amount: toTokenValue(amounts[s]),\n                            percent: percents[s]/100000*100\n                        }\n                    }\n                    this.setState({ rewardTiers: result })   \n                }\n            })\n            \n        }\n    })\n\n   \n\n    this.state.staking.methods.countRewardTiers().call((error, result) => {\n        if(!error) {\n            this.setState({ countRewardTiers: result })   \n        }\n    })\n\n    this.state.staking.methods.rewardPercent().call((error, result) => {\n        if(!error) {\n            this.setState({ rewardPercent: result/100000*100 })\n        }\n    })\n    \n    \n\n    \n    \n\n  }\n\n  createStake = (amount) => {\n    this.setState({ \n        loading: true,\n        currentScreen: 'stake',\n        error: {} \n    })\n    this.state.staking.methods.createStake(amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ \n            loading: false,\n            isWaiting: true,\n        })\n    }).on('error', (error) => { \n        this.setState({ \n            loading: false,\n            error: error,\n        })\n        console.log(error);\n    }).then((instance) => {\n        this.loadStakingData();\n    })\n  }\n\n  withdrawReward = () => {\n    this.setState({ \n        loading: true,\n        currentScreen: 'stake',\n        error: {} \n    })\n    this.state.staking.methods.withdrawReward().send({from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ \n            loading: false,\n            isWaiting: true,\n        })\n    }).on('error', (error) => { \n        this.setState({ \n            loading: false,\n            error: error,\n        })\n        console.log(error);\n    }).then((instance) => {\n        this.loadStakingData();\n    })\n  }\n\n  removeStake = (amount) => {\n    this.setState({ \n        loading: true,\n        currentScreen: 'stake',\n        error: {} \n    })\n    this.state.staking.methods.removeStake(amount).send({from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ \n            loading: false,\n            isWaiting: true,\n        })\n    }).on('error', (error) => { \n        this.setState({ \n            loading: false,\n            error: error,\n        })\n        console.log(error);\n    }).then((instance) => {\n        this.loadStakingData();\n    })\n  }\n\n  setMinStake = (amount) => {\n    this.setState({ \n        loading: true,\n        currentScreen: 'admin',\n        error: {}\n    })\n    this.state.staking.methods.setMinStake(amount).send({from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ \n            loading: false,\n            isWaiting: true\n        })\n    }).on('error', (error) => { \n        this.setState({ \n            loading: false,\n            currentScreen: 'admin',\n            error: error,\n        })\n        console.log(error);\n    }).then((instance) => {\n        this.loadStakingData();\n    })\n  }\n\n  setBlocksPerReward = (amount) => {\n    this.setState({ \n        loading: true,\n        currentScreen: 'admin',\n        error: {}\n    })\n    this.state.staking.methods.setBlocksPerReward(amount).send({from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ \n            loading: false,\n            isWaiting: true,\n        })\n    }).on('error', (error) => { \n        this.setState({ \n            loading: false,\n            error: error,\n        })\n        console.log(error);\n    }).then((instance) => {\n        this.loadStakingData();\n    })\n  }\n\n  setRewardPercent = (amount) => {\n    this.setState({ \n        loading: true,\n        currentScreen: 'admin',\n        error: {}\n    })\n    this.state.staking.methods.setRewardPercent(amount).send({from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ \n            loading: false,\n            isWaiting: true,\n        })\n    }).on('error', (error) => { \n        this.setState({ \n            loading: false,\n            error: error,\n        })\n        console.log(error);\n    }).then((instance) => {\n        this.loadStakingData();\n    })\n  }\n  \n  removeRewardTier = (amount) => {\n    this.setState({ \n        loading: true,\n        currentScreen: 'admin',\n        error: {}\n    })\n    this.state.staking.methods.removeRewardTier(amount).send({from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ \n            loading: false,\n            isWaiting: true,\n        })\n    }).on('error', (error) => { \n        this.setState({ \n            loading: false,\n            error: error,\n        })\n        console.log(error);\n    }).then((instance) => {\n        this.loadStakingData();\n    })\n  }\n\n  setScreen = (screen) => {\n    this.setState({ \n        currentScreen: screen\n    })\n  }\n\n  faucet = () => {\n      if(!this.state.account) {\n        let error = {message: 'noMetaMask'}\n        this.setState({ error })\n        return;\n      }\n    this.setState({ \n        loading: true,\n        currentScreen: 'stake',\n        error: {},\n    })\n        this.state.staking.methods.faucet().send({ from: this.state.account }).on('transactionHash', (hash) => {\n            this.setState({ \n                loading: false,\n                isWaiting: true,\n            })\n        }).on('error', (error) => { \n            this.setState({ \n                loading: false,\n                error: error,\n            })\n            console.log(error);\n        }).then((instance) => {\n            this.loadStakingData();\n        })\n    }\n\n    setStakingContract = (address) => {\n        this.setState({ \n            loading: true,\n            currentScreen: 'admin',\n            error: {},\n         })\n        this.state.token.methods.setStakingContract(address).send({from: this.state.account }).on('transactionHash', (hash) => {\n            this.setState({ \n                loading: false,\n                isWaiting: true,\n            })\n        }).on('error', (error) => { \n            this.setState({ \n                loading: false,\n                error: error,\n            })\n            console.log(error);\n        }).then((instance) => {\n            this.loadStakingData();\n        })\n      }\n\n\n      setRewardTier = (amount, percent) => {\n        this.setState({ \n            loading: true,\n            currentScreen: 'admin',\n            error: {},\n         })\n        this.state.staking.methods.setRewardTier(amount, percent).send({from: this.state.account }).on('transactionHash', (hash) => {\n            this.setState({ \n                loading: false,\n                isWaiting: true,\n            })\n        }).on('error', (error) => { \n            this.setState({ \n                loading: false,\n                error: error,\n            })\n            console.log(error);\n        }).then((instance) => {\n            this.loadStakingData();\n        })\n      }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      token: {},\n      staking: {},\n      stakingContractAddress: '',\n      networkBalance: \"0\",\n      tokenBalance: \"0\",\n      stakingOwner: '',\n      tokenOwner: '',\n      isAdmin: '',\n      minStake: \"0\",\n      stakeOf: \"0\",\n      nextRewardOf: \"0\",\n      blocksTillReward: \"0\",\n      totalStakeholders: \"0\",\n      blocksPerReward: \"0\",\n      countRewardTiers: \"0\",\n      rewardPercent: \"0\",\n      rewardTiers: [],\n      tierAmounts: [],\n      decimals: 100000000,\n      loading: true,\n      currentScreen: 'stake',\n      error: {},\n      isWaiting: false,\n    }\n  }\n\n  render() {\n\n    let content\n    let isAdmin\n    \n\n    if (this.state.loading) {\n\n      content = <p id=\"loader\" className=\"text-center\">Loading...</p>\n\n    } else {\n\n        let routes = [\n            {\n                id: 'stake',\n                title: 'Staking',\n            },\n            {\n                id: 'migrate',\n                title: 'Migration',\n            }\n        ]\n\n        let adminRoute = {\n            id: 'admin',\n            title: 'Admin',\n        }\n        let faucetRoute = {\n            id: 'faucet',\n            title: 'Faucet',\n        }\n        \n        if (routes.indexOf(adminRoute) === -1 && this.state.account \n          && (this.state.account === this.state.stakingOwner || this.state.account === this.state.tokenOwner) ) {\n            isAdmin = 'Admin';\n            routes.push(adminRoute)\n        }\n\n        if (routes.indexOf(faucetRoute) === -1 && this.state.tokenBalance === \"0\" ) {\n            routes.push(faucetRoute)\n        }\n        \n    let stats = [\n        {\n          id: 'your_balance',\n          title: 'Your Balance',\n          value: formatTokenAmount(this.state.tokenBalance),\n          color: 'bg-green-700',\n        },\n        {\n          id: 'your_stake',\n          title: 'Your Stake',\n          value: formatTokenAmount(this.state.stakeOf),\n          color: 'bg-aero-700',\n        },\n        {\n          id: 'your_reward',\n          title: 'Your Rewards',\n          value: formatTokenAmount(this.state.rewardOf),\n          color: 'bg-aero-700',\n        },\n        {\n          id: 'next_reward',\n          title: 'Next Reward',\n          value: formatTokenAmount(this.state.nextRewardOf),\n          color: 'bg-aero-700',\n        },\n        {\n          id: 'next_reward_date',\n          title: 'Next Reward',\n          value: blocksToTime(this.state.blocksTillReward),\n          color: 'bg-aero-700',\n        },\n        {\n          id: 'apy',\n          title: 'Estimated APY',\n          value: calculateAPY(\n              this.state.stakeOf === \"0\" \n              ? this.state.rewardPercent/100 \n              : this.state.nextRewardOf/this.state.stakeOf,\n              this.state.blocksPerReward, 5\n              ),\n          color: 'bg-aero-700',\n        },\n      ];\n\n      let adminStats = [\n        {\n          id: 'total_staked',\n          title: 'Total Staked',\n          value: formatTokenAmount(this.state.totalStakes),\n          color: 'bg-pink-900',\n        },\n        {\n          id: 'total_stakeholders',\n          title: 'Stakeholders',\n          value: formatNumber(this.state.totalStakeholders),\n          color: 'bg-aero-700',\n        },\n        {\n            id: 'admin_min_stake',\n            title: 'Minimum Stake',\n            value: formatTokenAmount(this.state.minStake),\n            color: 'bg-aero-700',\n        },\n        {\n          id: 'admin_blocks_per_reward',\n          title: 'Reward Time',\n          value: formatNumber(this.state.blocksPerReward) + ' blocks',\n          color: 'bg-aero-700',\n        },\n        {\n          id: 'admin_default_reward',\n          title: 'Default Reward',\n          value: this.state.rewardPercent + '%',\n          color: 'bg-aero-700',\n        },\n        {\n          id: 'admin_reward_tiers',\n          title: 'Reward Tiers',\n          value: formatNumber(this.state.countRewardTiers),\n          color: 'bg-aero-700',\n        },\n  \n      ]\n\n      let rewardProgress = (this.state.blocksPerReward-this.state.blocksTillReward) / this.state.blocksPerReward;\n      let i;\n      \n      if(rewardProgress > 0 && this.state.stakeOf !== \"0\") {\n        for(i=0; i < stats.length ; i++){\n            if(i < rewardProgress * stats.length) {\n                stats[i].color = 'bg-green-700'\n            }\n        }\n\n        for(i=0; i < adminStats.length ; i++){\n            if(i < rewardProgress * adminStats.length) {\n                adminStats[i].color = 'bg-pink-900'\n            }\n        }\n      }\n\n      content = <Main\n        networkBalance={this.state.networkBalance}\n        tokenBalance={toTokenValue(this.state.tokenBalance)}\n        rewardOf={toTokenValue(this.state.rewardOf)}\n        stakeOf={toTokenValue(this.state.stakeOf)}\n        minStake={toTokenValue(this.state.minStake)}\n        blocksPerReward={this.state.blocksPerReward}\n        rewardPercent={this.state.rewardPercent}\n        createStake={this.createStake}\n        removeStake={this.removeStake}\n        withdrawReward={this.withdrawReward}\n        setMinStake={this.setMinStake}\n        setBlocksPerReward={this.setBlocksPerReward}\n        setRewardPercent={this.setRewardPercent}\n        routes={routes}\n        stats={stats}\n        adminStats={adminStats}\n        account={this.state.account}\n        isAdmin={isAdmin}\n        currentScreen={this.state.currentScreen}\n        stakingContractAddress={this.state.stakingContractAddress}\n        rewardTiers={this.state.rewardTiers}\n        removeRewardTier={this.removeRewardTier}\n        setRewardTier={this.setRewardTier}\n        setStakingContract={this.setStakingContract}\n        faucet={this.faucet}\n        error={this.state.error}\n        setScreen={this.setScreen}\n        isWaiting={this.state.isWaiting}\n      />\n    }\n\n\n    return (\n      <div className=\"bg-aero-800 min-h-screen text-blue-100 text-lg\">\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/inc/App.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('app'));\nserviceWorker.register();\n"],"sourceRoot":""}